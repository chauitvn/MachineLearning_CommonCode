Metadata-Version: 1.1
Name: vnquant
Version: 0.0.1
Summary: Viet Nam stock market
Home-page: https://github.com/phamdinhkhanh/vnquant
Author: KhanhPhamDinh
Author-email: phamdinhkhanh.tkt53.neu@gmail.com
License: MIT
Description: vnquant package
        ===============
        
        .. raw:: html
        
           <div style="display: flex; justify-content: center;">
        
         vnquant package
        
        .. raw:: html
        
           </div>
        
        Introduction
        ------------
        
        This project provide the financial information and useful visualization
        instrument about Vietnam stock market to researcher. Particularly, there
        are many aspect of data relating to any stock being able to store and
        clone. The official version are built on both machine learning language
        Python and R.
        
        Setting:
        --------
        
        This project is in developing process, So it is only distributed on
        github channel. To install requiring you open the command line and type
        the below commands:
        
        ::
        
            git clone https://github.com/phamdinhkhanh/vnquant
            cd vnquant
            python setup.py install
        
        you must install git command line in your computer to run above command.
        
        Clone Stock Prices:
        -------------------
        
        You can load the prices of one or more stocks in specific time interval
        according to syntax as below.
        
        .. code:: {python}
        
            DataLoader(symbols="VND",
                       start="2018-01-10",
                       end="2018-02-15",
                       minimal=True,
                       data_source="vnd")
        
        **Arguments**
        
        -  ``symbols``: a string or list of strings indicate the stock names.
           The stock symbols in regular include 3 upper case letters except
           several special index such as:
           ``VN30INDEX, VN100-INDEX, HNX-INDEX, HNX30-INDEX, UPCOM-INDEX`` in
           case your ``data_source = "cafe"`` and ``VN30, HNX30, UPCOM`` in case
           your ``data_source = "vnd"``.
        -  ``start``: start date time with format ``yyyy-mm-dd``.
        -  ``end``: end date time with format ``yyyy-mm-dd``.
        -  ``minimal``: default is True, we only clone
           ``high, low, open, close, adjust price, volume`` of stocks. In
           contrast, more information is added, for example
           ``volumn_reconcile, volumn_match,...``
        -  ``data_source``: the source to clone the stock prices. Currently,
           there two main resources are ``Vndirect`` and ``Cafef`` showed by
           ``data_source = vnd`` and ``cafe``, respectively. The default is
           ``vnd``.
        
        Clone one stock:
        ~~~~~~~~~~~~~~~~
        
        .. code:: {python}
        
            from VNDS import DataLoader
            loader = DataLoader(symbols="VND", start="2018-01-10", end="2018-02-15", minimal=True, data_source="vnd")
            data = loader.download()
            data.head()
        
        Clone more stocks:
        ~~~~~~~~~~~~~~~~~~
        
        .. code:: {python}
        
            loader = DataLoader(symbols=["VND", "VCB"], start="2018-01-10", end="2018-02-15", minimal=True, data_source="vnd")
            data = loader.download()
            data.head()
        
        +--------------------------+-----------+-----------------+----------------+
        | Dataset                  | Classes   | Train samples   | Test samples   |
        +==========================+===========+=================+================+
        | AGâ€™s News                | 4         | 120 000         | 7 600          |
        +--------------------------+-----------+-----------------+----------------+
        | Sogou News               | 5         | 450 000         | 60 000         |
        +--------------------------+-----------+-----------------+----------------+
        | DBPedia                  | 14        | 560 000         | 70 000         |
        +--------------------------+-----------+-----------------+----------------+
        | Yelp Review Polarity     | 2         | 560 000         | 38 000         |
        +--------------------------+-----------+-----------------+----------------+
        | Yelp Review Full         | 5         | 650 000         | 50 000         |
        +--------------------------+-----------+-----------------+----------------+
        | Yahoo! Answers           | 10        | 1 400 000       | 60 000         |
        +--------------------------+-----------+-----------------+----------------+
        | Amazon Review Full       | 5         | 3 000 000       | 650 000        |
        +--------------------------+-----------+-----------------+----------------+
        | Amazon Review Polarity   | 2         | 3 600 000       | 400 000        |
        +--------------------------+-----------+-----------------+----------------+
        
        Through this project, i hope you make your work being more covinient and
        easy by applying them. Though try hard, but there are many drawback,
        kindly comment and send me feed back to implement my project.
        
Keywords: data
Platform: UNKNOWN
Classifier: Development Status :: 0 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Trader/Investor/Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Financial/Stock Market
